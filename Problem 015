Lattice Paths

Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.
How many such routes are there through a 20×20 grid?

#python solution
gridLength = 20
# create matrix
grid = [[0 for x in range(gridLength + 1)] for y in range(gridLength + 1)]
# iterate through, storing values
for i in range(gridLength + 1):
    grid[i][0] = 1
for j in range(gridLength + 1):
    grid[0][j] = 1
for i in range(1, gridLength + 1):
    for j in range(1, gridLength + 1):
        grid[i][j] = grid[i - 1][j] + grid[i][j - 1]
# print last value
print(grid[gridLength][gridLength])

//java solution
int gridLength = 20;
//create matrix
BigInteger[][] array = new BigInteger[gridLength + 1][gridLength + 1];
//initialize 1s along top row and left column
for (int i = 0; i < gridLength + 1; i++) {
    array[i][0] = BigInteger.ONE;
}
for (int j = 1; j < gridLength + 1; j++) {
    array[0][j] = BigInteger.ONE;
}
//calculate resultant values
for (int i = 1; i < gridLength + 1; i++) {
    for (int j = 1; j < gridLength + 1; j++) {
        array[i][j] = array[i - 1][j].add(array[i][j - 1]);
    }
}
System.out.println(array[gridLength][gridLength].toString());
